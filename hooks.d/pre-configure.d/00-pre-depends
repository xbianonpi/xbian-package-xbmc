[ ! -e $XBIANROOT/common.functions ] || . $XBIANROOT/common.functions && { [ ! -e ../env ] || rexp ../env; }
cd tools/depends

test -e configure || ./bootstrap

[ -z "$CC" ] || \
  {
    [ "$(dirname $CC)" == "." ] && CCPATH="/usr/bin/" || CCPATH='' # Bypassing ccache
    plat=$(eval $config_build_env $CCPATH$CC -v 2>&1| grep Target | awk '{print $2}')
    extraargs="--host=$plat --build=$plat"
    [ -z "$PLATFORM" ] || extraargs="--with-platform=$PLATFORM $extraargs"
  }
test -e config.status || eval $config_build_env ./configure --prefix=$(pwd) $extraargs

test -e ./Makefile.include || exit 1

[ -d xbmc-tarballs ] || mkdir xbmc-tarballs # If a build is run twice w/o wipe, this dir is removed

[ -d native/autoconf-native ] && NS='-native' || NS=''

eval $config_build_env make -C native/autoconf$NS all
eval $config_build_env make -C native/automake$NS all

# Kodi v18: libdvd* wont't built without pkg-config
eval $config_build_env make -C native/pkg-config$NS all # TexturePacker configure needs pkg.m4
[ ! -d target/libdcadec ] || eval $config_build_env make -C target/libdcadec all     # 
[ ! -d target/crossguid ] || eval $config_build_env make -C target/crossguid all


### Kodi v17, v18, v19
case $config_platform_branch in
    *-krypton)
        eval $config_build_env make -C native/libtool$NS all    # for libdvd*
        [ ! -d target/libdvdcss ] || eval $config_build_env make -C target/libdvdcss
        [ ! -d target/libdvdcss ] || eval $config_build_env make -C target/libdvdread
        [ ! -d target/libdvdcss ] || eval $config_build_env make -C target/libdvdnav
        ;;
    *-l*|*-m*)
        eval $config_build_env make -C native/libtool$NS all    # for libdvd*
        ;;
    *)
        exit 0
        ;;
esac
