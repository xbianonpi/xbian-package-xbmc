cd tools/depends

test -e configure || ./bootstrap

[ -z "$CC" ] || \
  {
    [ "$(dirname $CC)" == "." ] && CCPATH="/usr/bin/" || CCPATH='' # Bypassing ccache
    plat=$(eval $config_build_env $CCPATH$CC -v 2>&1| grep Target | awk '{print $2}')
    extraargs="--host=$plat --build=$plat"
  }

[ -z "$config_with_platform" ] || PLATFORM=$config_with_platform
[ -z "$PLATFORM" ] || extraargs="--with-platform=$PLATFORM --with-rendersystem=gles $extraargs"
test -e config.status || eval $config_build_env ./configure --prefix=$(pwd) $extraargs

test -e ./Makefile.include || exit 1

[ -d xbmc-tarballs ] || mkdir xbmc-tarballs # If a build is run twice w/o wipe, this dir is removed

[ -d native/autoconf-native ] && NS='-native' || NS=''

build_env () {
    for i in 1 2 3; do
        eval $config_build_env make -C $@ && return || :
        echo "[]--------------------------------------------------[]"
        echo "[] Build error, pass $i                              []"
        echo "[]--------------------------------------------------[]"
    done
    exit 1
}

case $config_platform_branch in
    *-[mnop]*)
        : # Building tools not longer required
        ;;
    *)
        build_env native/autoconf$NS all
        build_env native/automake$NS all
        # Kodi v18: libdvd* wont't built without pkg-config
        build_env  native/pkg-config$NS all # TexturePacker configure needs pkg.m4
        [ ! -d target/crossguid ] || build_env target/crossguid all
        ;;
esac

[ ! -d target/libdcadec ] || build_env target/libdcadec all

### Kodi v17, v18, v19, v20, v21, v22
case $config_platform_branch in
    *-k*)
        build_env native/libtool$NS all    # for libdvd*
        [ ! -d target/libdvdcss ] || build_env target/libdvdcss
        [ ! -d target/libdvdcss ] || build_env target/libdvdread
        [ ! -d target/libdvdcss ] || build_env target/libdvdnav
        ;;
    *-l*)
        build_env native/libtool$NS all    # for libdvd*
        ;;
    *-[mno]*)
        eval $config_build_env dpkg-query -s libspdlog-dev:armhf 2>&1 >/dev/null || build_env target/libspdlog
        eval $config_build_env dpkg-query -s libudfread-dev:armhf 2>&1 >/dev/null || build_env target/libudfread
        ;;
    *-[p]*)
        eval $config_build_env dpkg-query -s libspdlog-dev:armhf 2>&1 >/dev/null || build_env target/libspdlog
        eval $config_build_env dpkg-query -s libudfread-dev:armhf 2>&1 >/dev/null || build_env target/libudfread
        eval $config_build_env dpkg-query -s libexiv2-dev:armhf 2>&1 >/dev/null || build_env target/exiv2
        ;;
    *)
        exit 0
        ;;
esac
